<p>
    The Service Management Layer (SML) is a middleware Layer in the architecture and is responsible for the
    orchestration and management of services across multiple clouds, public, private and micro. The SML coordinates with
    the <a href="./doc/package/edgemere/diml">Distributed Information Management Layer</a> and the
    <a href="./doc/package/edgemere/sdi">Software Defined Infrastructure</a>. It takes requests from the
    <a href="./doc/package/edgemere/aml">Application Management Layer</a> for deployment of services that make up
    applications and workflows.
</p>
<img src="./edgemere/sml/SML.png">
<p>
    The main goal of the SML is to provide the <a href="./doc/actor/ApplicationDeveloper">App Developer</a> a simple,
    repeatable, roboust mechanism to deploy services into the multi-cloud ecosystem. It also needs to provide
    <a href="./doc/actor/ITOperations">IT Ops</a> mechanisms to enforce policies pertaining to cost, reliability and
    security. Applications and Services are deployed to cloud assets based on these policies and can be run across cloud
    boundaries as dictated by the IT policies enforced in the system. All communications between services should follow
    secure communication protocols as dictated by the IT policies. The key is that a single portal or gateway should be
    used such that applications and services are deployed and managed automatically with out human interaction.
    Decisions about where services should land should be automatically based on the IT policies established not
    determined by the <a href="./doc/actor/ApplicationDeveloper">App Developer</a> or <a href="./doc/actor/ITOperations">IT
    Operator</a>.
</p>
<img src="./edgemere/sml/MHCloud.png">

<p>
    The SML has has several actors that interact with the sub-system.
    Each one of these actors has a different motivator for using the system. Eventhough some of their uses of the
    systems are the same. The reason they are using the system is very different.
<ul>
    <li><a href="./doc/actor/ITOperations">IT Operations</a> - Motivators include: optimize infrastructure for cost,
        protect infrastructure and IP, and increase reliability and resiliency.
    </li>
    <li><a href="./doc/actor/DevOpsEngineer">DevOps Engineer</a> - Motivators include: Automate everything, streamlining
        code pipelining, managing build and deploy with CI/CD
    </li>
    <li><a href="./doc/actor/ApplicationDeveloper">Application Developer</a> - Motivators include: Repeatable and
        reusable service stacks, deploying services across cloud and environments
    </li>
    <li><a href="./doc/actor/StackDeveloper">Stack Developer</a> - Motivators include - Deliverying solutions in quick
        iterations, Very short break, fix, deploy cycle
    </li>
</ul>
</p>
<img src="./edgemere/sml/UseCasesHighLevel.png">

<p>
    The SML spaces is full of tools that can be integrated together to deliver the use cases demanded by the actors in
    this space.
    The tools can be categorized into three major categories:
<ul>
    <li>Cloud Management Platforms - built for <a href="./doc/actor/ITOperations">IT Operators</a> focusing on multi-cloud support and management of infrastructure profiles across multi-clouds.</li>
    <li>Automation Frameworks - built for <a href="./doc/actor/DevOpsEngineer">DevOps</a> and <a href="./doc/actor/StackDeveloper">Stack Development</a> focusing on the provision and deployment of software in a repatable/reusable manner.</li>
    <li>Platform As A Service - built for <a href="./doc/actor/ApplicationDeveloper">Application Developer</a> focusing on reusing services and decreasing the complexity of using those services to build applications.</li>
</ul>
These tool sets have been developed by and for specific actors over the years. And the integration of these tools together help cover the current gaps that exist in the individual tools.
</p>
<img src="./edgemere/sml/Three.png">

<p>
    The SML has sub-systems as part of the architecture and include Orchestration and Control elements.
    <ul>
    <li><a href="./doc/package/edgemere/sml/em">Environment Management</a> - manages environments (dev,test,prod) across multiple clouds</li>
    <li><a href="./doc/package/edgemere/sml/so">Service Orchestrator</a> - orchestrates the services in the different environments.</li>
    <li><a href="./doc/package/edgemere/sml/sr">Service Registry</a> - centralized repository of service definitions.</li>
    <li><a href="./doc/package/edgemere/diml/dml/do">Data Coordinator</a> - working with the <a href="./doc/package/edgemener/diml">DIML</a> to orchestrate data and services together.</li>
    <li><a href="./doc/package/edgemere/sa">Security</a> - working with the security policies and tools to ensure applications and services communicate securely.</li>
    <li><a href="./doc/package/edgemere/sml/pe">Provision Engine</a> - provisions software stacks and services on infrastructure</li>
    <li><a href="./doc/package/edgemere/sml/cb">Cloud Broker</a> - manages the clouds and which clouds can manage which requests</li>
</ul>
</p>

<img src="./edgemere/sml/HMCloudDetail.png">
