@startuml

actor "IT Operations"


entity EventBus

box Software Defined Infrastructure #lightyellow
    boundary sdi #white
end box


box Common Physical Layer #lightgray
            participant device
            participant datacenter
    end box

box Software Defined Infrastructure #lightyellow
            participant cloud
    end box


"IT Operations" -> sdi: Get Resources

    sdi -> "device": create (name: hostgr1,file: ./templates/device.yaml)

    "device" --/ EventBus: device.create

    sdi -> "device": create (name: hostgr2,file: ./templates/device.yaml)

    "device" --/ EventBus: device.create

    sdi -> "device": create (name: hostgr3,file: ./templates/device.yaml)

    "device" --/ EventBus: device.create

    sdi -> "device": create (name: hostgr4,file: ./templates/device.yaml)

    "device" --/ EventBus: device.create

    sdi -> "device": create (name: hostgr5,file: ./templates/device.yaml)

    "device" --/ EventBus: device.create

    sdi -> "device": create (name: hostgr6,file: ./templates/device.yaml)

    "device" --/ EventBus: device.create

    sdi -> "datacenter": create (name: dcgr1)

    "datacenter" --/ EventBus: datacenter.create

    sdi -> "datacenter": adddevices (name: dcgr1,items: hostgr1,hostgr2,hostgr3,hostgr4,hostgr5,hostgr6)

    "datacenter" --/ EventBus: datacenter.adddevices

    sdi -> "cloud": create (name: cloudgr1)

    "cloud" --/ EventBus: cloud.create

    sdi -> "cloud": adddatacenters (name: cloudgr1,items: dcgr1)

    "cloud" --/ EventBus: cloud.adddatacenters

    sdi -> "datacenter": disable (name: dcgr1)

    "datacenter" --/ EventBus: datacenter.disable

    sdi -> "software defined infrastructure": get (name: myRes,cloud: cloudgr1,requirements: ./templates/requirements.yaml)

    "software defined infrastructure" --/ EventBus: resource.get

    sdi -> "software defined infrastructure": get (name: myRes2,cloud: cloudgr1,requirements: ./templates/requirements2.yaml)

    "software defined infrastructure" --/ EventBus: resource.get

    sdi -> "software defined infrastructure": get (name: myRes3,cloud: cloudgr1,requirements: ./templates/requirements3.yaml)

    "software defined infrastructure" --/ EventBus: resource.get

    sdi -> "software defined infrastructure": get (name: myRes4,cloud: cloudgr1,requirements: ./templates/requirements.yaml)

    "software defined infrastructure" --/ EventBus: resource.get



@enduml
