@startuml

left to right direction




node "aml" as amlStack #88cccc {
    portin "parent" as amlStackPortIn #blue
}
node "cpl" as cplStack #cccccc {
    portin "parent" as cplStackPortIn #blue
}
node "diml" as dimlStack #ffcc88 {
    portin "parent" as dimlStackPortIn #blue
}
node "ia" as iaStack #cc8888 {
    portin "parent" as iaStackPortIn #blue
}
node "sa" as saStack #cc8888 {
    portin "parent" as saStackPortIn #blue
}
node "sml" as smlStack #88cc88 {
    portin "parent" as smlStackPortIn #blue
}
node "sdi" as sdiStack #cccc88 {
    portin "parent" as sdiStackPortIn #blue
}



node "edgemere" #ccaaff {


    hexagon parentnet #black [
            <b><color:white>parent</color></b>
    ]
    
    portin " " as parentnetPortIn #black
    parentnetPortIn -[#black]- parentnet
    
    hexagon childrennet #blue [
            <b><color:white>children</color></b>
    ]
    
    portout " " as childrennetPortOut #blue
    childrennet -[#blue]- childrennetPortOut
    
    hexagon siblingsnet #red [
            <b><color:white>siblings</color></b>
    ]
    

node "aml" as amlService #white {
    portOut " " as amlServicechildrennet #blue
   amlServicechildrennet -[#blue]- childrennet
   
    collections "aml" as amlimage
    
}
node "cpl" as cplService #white {
    portOut " " as cplServicechildrennet #blue
   cplServicechildrennet -[#blue]- childrennet
   
    collections "cpl" as cplimage
    
}
node "diml" as dimlService #white {
    portOut " " as dimlServicechildrennet #blue
   dimlServicechildrennet -[#blue]- childrennet
   
    collections "diml" as dimlimage
    
}
node "ia" as iaService #white {
    portOut " " as iaServicechildrennet #blue
   iaServicechildrennet -[#blue]- childrennet
   
    collections "ia" as iaimage
    
}
node "sa" as saService #white {
    portOut " " as saServicechildrennet #blue
   saServicechildrennet -[#blue]- childrennet
   
    collections "sa" as saimage
    
}
node "sml" as smlService #white {
    portOut " " as smlServicechildrennet #blue
   smlServicechildrennet -[#blue]- childrennet
   
    collections "sml" as smlimage
    
}
node "sdi" as sdiService #white {
    portOut " " as sdiServicechildrennet #blue
   sdiServicechildrennet -[#blue]- childrennet
   
    collections "sdi" as sdiimage
    
}
node "web" as webService #white {

    portIn " " as webServiceparentnet #black
    parentnet -[#black]- webServiceparentnet
        portOut " " as webServicesiblingsnet #red
   webServicesiblingsnet -[#red]- siblingsnet
   

    artifact "edgemere_web" as edgemere_webimage
    
}
node "doc" as docService #white {
    portOut " " as docServicesiblingsnet #red
   docServicesiblingsnet -[#red]- siblingsnet
   

    artifact "edgemere_doc" as edgemere_docimage
    
}

}

amlimage --> amlStack
    
    childrennetPortOut -[#blue]- amlStackPortIn
    
cplimage --> cplStack
    
    childrennetPortOut -[#blue]- cplStackPortIn
    
dimlimage --> dimlStack
    
    childrennetPortOut -[#blue]- dimlStackPortIn
    
iaimage --> iaStack
    
    childrennetPortOut -[#blue]- iaStackPortIn
    
saimage --> saStack
    
    childrennetPortOut -[#blue]- saStackPortIn
    
smlimage --> smlStack
    
    childrennetPortOut -[#blue]- smlStackPortIn
    
sdiimage --> sdiStack
    
    childrennetPortOut -[#blue]- sdiStackPortIn
    

@enduml
