@startuml
left to right direction


    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "blueprint" as edgemeredimlddfblueprint
 interface "attach" as edgemeredimlddfblueprintattach
edgemeredimlddfblueprint -- edgemeredimlddfblueprintattach
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "data" as edgemeredimlddfdata
 interface "create" as edgemeredimlddfdatacreate
edgemeredimlddfdata -- edgemeredimlddfdatacreate
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "data" as edgemeredimlddfdata
 interface "govern" as edgemeredimlddfdatagovern
edgemeredimlddfdata -- edgemeredimlddfdatagovern
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
package "data" as edgemeredimlddfdata {
 component "source" as edgemeredimlddfdatasource
 interface "name" as edgemeredimlddfdatasourcename
edgemeredimlddfdatasource -- edgemeredimlddfdatasourcename
}
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "dataadaptor" as edgemeredimlddfdataadaptor
 interface "create" as edgemeredimlddfdataadaptorcreate
edgemeredimlddfdataadaptor -- edgemeredimlddfdataadaptorcreate
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "dataadaptor" as edgemeredimlddfdataadaptor
 interface "update" as edgemeredimlddfdataadaptorupdate
edgemeredimlddfdataadaptor -- edgemeredimlddfdataadaptorupdate
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "datablueprint" as edgemeredimlddfdatablueprint
 interface "create" as edgemeredimlddfdatablueprintcreate
edgemeredimlddfdatablueprint -- edgemeredimlddfdatablueprintcreate
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "datablueprint" as edgemeredimlddfdatablueprint
 interface "deploy" as edgemeredimlddfdatablueprintdeploy
edgemeredimlddfdatablueprint -- edgemeredimlddfdatablueprintdeploy
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "datablueprint" as edgemeredimlddfdatablueprint
 interface "list" as edgemeredimlddfdatablueprintlist
edgemeredimlddfdatablueprint -- edgemeredimlddfdatablueprintlist
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "datacatalog" as edgemeredimlddfdatacatalog
 interface "list" as edgemeredimlddfdatacataloglist
edgemeredimlddfdatacatalog -- edgemeredimlddfdatacataloglist
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "datadaptor" as edgemeredimlddfdatadaptor
 interface "list" as edgemeredimlddfdatadaptorlist
edgemeredimlddfdatadaptor -- edgemeredimlddfdatadaptorlist
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "datapipeline" as edgemeredimlddfdatapipeline
 interface "list" as edgemeredimlddfdatapipelinelist
edgemeredimlddfdatapipeline -- edgemeredimlddfdatapipelinelist
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "dataprocedure" as edgemeredimlddfdataprocedure
 interface "list" as edgemeredimlddfdataprocedurelist
edgemeredimlddfdataprocedure -- edgemeredimlddfdataprocedurelist
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "datasource" as edgemeredimlddfdatasource
 interface "simulate" as edgemeredimlddfdatasourcesimulate
edgemeredimlddfdatasource -- edgemeredimlddfdatasourcesimulate
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "ddf" as edgemeredimlddf #ffcc88 {
 component "metadata" as edgemeredimlddfmetadata
 interface "list" as edgemeredimlddfmetadatalist
edgemeredimlddfmetadata -- edgemeredimlddfmetadatalist
}
}
}

    












        rectangle "Manage Applications" as ManageApplications #ffffaa {
            ("Build Application")/ as DevOpsEngineerManageApplicationsBuildApplication
        }
    
    edgemeredimlddfdatacreate <-- DevOpsEngineerManageApplicationsBuildApplication



        rectangle "Change Physical World" as ChangePhysicalWorld #ffffaa {
            ("Adjust Temperature")/ as ActorChangePhysicalWorldAdjustTemperature
        }
    
    edgemeredimlddfdatacreate <-- ActorChangePhysicalWorldAdjustTemperature

        rectangle "Change Physical World" as ChangePhysicalWorld #ffffaa {
            ("Toogle Switch")/ as ActorChangePhysicalWorldtoggleSwitch
        }
    
    edgemeredimlddfdatacreate <-- ActorChangePhysicalWorldtoggleSwitch



        rectangle "Connect Physical Asset to a Device" as ConnectPhysicalAssettoaDevice #ffffaa {
            ("Asset Digital Device Connectivity")/ as ActorConnectPhysicalAssettoaDeviceAssetDigitalDeviceConnectivity
        }
    
    edgemeredimlddfdatacreate <-- ActorConnectPhysicalAssettoaDeviceAssetDigitalDeviceConnectivity




        rectangle "Monitor Physical World" as MonitorPhysicalWorld #ffffaa {
            ("Continuous Monitoring")/ as ActorMonitorPhysicalWorldContinuousMonitoring
        }
    
    edgemeredimlddfdatacreate <-- ActorMonitorPhysicalWorldContinuousMonitoring







        rectangle "Manage Data" as ManageData #ffffaa {
            ("Destroy Data")/ as DataStewardManageDataDestroyData
        }
    
    edgemeredimlddfdatasourcename <-- DataStewardManageDataDestroyData

        rectangle "Manage Data" as ManageData #ffffaa {
            ("Egress Data")/ as DataStewardManageDataEgressData
        }
    
    edgemeredimlddfdatasourcename <-- DataStewardManageDataEgressData

        rectangle "Manage Data" as ManageData #ffffaa {
            ("Ingest Data")/ as DataStewardManageDataIngestData
        }
    
    edgemeredimlddfdatasourcename <-- DataStewardManageDataIngestData


        rectangle "Manage Data Adaptors" as ManageDataAdaptors #ffffaa {
            ("Attach Data Blue Print")/ as DataScientistManageDataAdaptorsAttachDataBluePrint
        }
    
    edgemeredimlddfblueprintattach <-- DataScientistManageDataAdaptorsAttachDataBluePrint

        rectangle "Manage Data Adaptors" as ManageDataAdaptors #ffffaa {
            ("Create Data Adaptor")/ as DataEngineerManageDataAdaptorsCreateDataAdaptor
        }
    
    edgemeredimlddfdataadaptorcreate <-- DataEngineerManageDataAdaptorsCreateDataAdaptor

        rectangle "Manage Data Adaptors" as ManageDataAdaptors #ffffaa {
            ("Update Data Adaptor")/ as DataEngineerManageDataAdaptorsUpdateDataAdaptor
        }
    
    edgemeredimlddfdataadaptorupdate <-- DataEngineerManageDataAdaptorsUpdateDataAdaptor


        rectangle "Manage Data Blue Prints" as ManageDataBluePrints #ffffaa {
            ("Create Blue Print")/ as DataScientistManageDataBluePrintsCreateBluePrint
        }
    
    edgemeredimlddfdatablueprintcreate <-- DataScientistManageDataBluePrintsCreateBluePrint




        rectangle "Manage Meta Data" as ManageMetaData #ffffaa {
            ("Capture Meta Data")/ as DataEngineerManageMetaDataCaptureMetaData
        }
    
    edgemeredimlddfdatacreate <-- DataEngineerManageMetaDataCaptureMetaData

        rectangle "Manage Meta Data" as ManageMetaData #ffffaa {
            ("Capture Meta Data")/ as DataStewardManageMetaDataCaptureMetaData
        }
    
    edgemeredimlddfdatacreate <-- DataStewardManageMetaDataCaptureMetaData

        rectangle "Manage Meta Data" as ManageMetaData #ffffaa {
            ("Manage Data Catalog")/ as DataScientistManageMetaDataManageDataCatalog
        }
    
    edgemeredimlddfdatacataloglist <-- DataScientistManageMetaDataManageDataCatalog















        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Build Stack")/ as DevOpsEngineerManageStacksBuildStack
        }
    
    edgemeredimlddfdatacreate <-- DevOpsEngineerManageStacksBuildStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Create Application Stack")/ as ApplicationDeveloperManageStacksCreateApplicationStack
        }
    
    edgemeredimlddfdatacreate <-- ApplicationDeveloperManageStacksCreateApplicationStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Create Application Stack")/ as StackDeveloperManageStacksCreateApplicationStack
        }
    
    edgemeredimlddfdatacreate <-- StackDeveloperManageStacksCreateApplicationStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Create Service Stack")/ as StackDeveloperManageStacksCreateServiceStack
        }
    
    edgemeredimlddfdatacreate <-- StackDeveloperManageStacksCreateServiceStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Modify Application Stack")/ as StackDeveloperManageStacksModifyApplicationStack
        }
    
    edgemeredimlddfdatacreate <-- StackDeveloperManageStacksModifyApplicationStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Modify Application Stack")/ as ApplicationDeveloperManageStacksModifyApplicationStack
        }
    
    edgemeredimlddfdatacreate <-- ApplicationDeveloperManageStacksModifyApplicationStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Modify Service Stack")/ as StackDeveloperManageStacksModifyServiceStack
        }
    
    edgemeredimlddfdatacreate <-- StackDeveloperManageStacksModifyServiceStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Test Application Stack")/ as StackDeveloperManageStacksTestApplicationStack
        }
    
    edgemeredimlddfdatacreate <-- StackDeveloperManageStacksTestApplicationStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Test Application Stack")/ as ApplicationDeveloperManageStacksTestApplicationStack
        }
    
    edgemeredimlddfdatacreate <-- ApplicationDeveloperManageStacksTestApplicationStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Test Service Stack")/ as StackDeveloperManageStacksTestServiceStack
        }
    
    edgemeredimlddfdatacreate <-- StackDeveloperManageStacksTestServiceStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Version Application Stack")/ as ApplicationDeveloperManageStacksVersionApplicationStack
        }
    
    edgemeredimlddfdatacreate <-- ApplicationDeveloperManageStacksVersionApplicationStack

        rectangle "Manage Stacks" as ManageStacks #ffffaa {
            ("Version Service Stack")/ as StackDeveloperManageStacksVersionServiceStack
        }
    
    edgemeredimlddfdatacreate <-- StackDeveloperManageStacksVersionServiceStack




        rectangle "Manage Services" as ManageServices #ffffaa {
            ("Build Service")/ as StackDeveloperManageServicesBuildService
        }
    
    edgemeredimlddfdatacreate <-- StackDeveloperManageServicesBuildService









@enduml
