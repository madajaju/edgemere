@startuml
left to right direction


    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "dml" as edgemeredimldml {
 component "do" as edgemeredimldmldo
 interface "evaluate" as edgemeredimldmldoevaluate
edgemeredimldmldo -- edgemeredimldmldoevaluate
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "dml" as edgemeredimldml {
 component "do" as edgemeredimldmldo
 interface "reserve" as edgemeredimldmldoreserve
edgemeredimldmldo -- edgemeredimldmldoreserve
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "dml" as edgemeredimldml {
package "do" as edgemeredimldmldo ##aaffff {
 component "datainstance" as edgemeredimldmldodatainstance
 interface "create" as edgemeredimldmldodatainstancecreate
edgemeredimldmldodatainstance -- edgemeredimldmldodatainstancecreate
}
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "dml" as edgemeredimldml {
package "do" as edgemeredimldmldo ##aaffff {
 component "datainstance" as edgemeredimldmldodatainstance
 interface "destroy" as edgemeredimldmldodatainstancedestroy
edgemeredimldmldodatainstance -- edgemeredimldmldodatainstancedestroy
}
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "dml" as edgemeredimldml {
package "do" as edgemeredimldmldo ##aaffff {
 component "datainstance" as edgemeredimldmldodatainstance
 interface "find" as edgemeredimldmldodatainstancefind
edgemeredimldmldodatainstance -- edgemeredimldmldodatainstancefind
}
}
}
}

    
    package "edgemere" as edgemere {
package "diml" as edgemerediml {
package "dml" as edgemeredimldml {
package "do" as edgemeredimldmldo ##aaffff {
 component "datainstance" as edgemeredimldmldodatainstance
 interface "list" as edgemeredimldmldodatainstancelist
edgemeredimldmldodatainstance -- edgemeredimldmldodatainstancelist
}
}
}
}

    
hexagon "datareference.provisioning" as datareferenceprovisioning
            edgemeredimldmldo <-- datareferenceprovisioning
        
hexagon "datarequest.needed" as datarequestneeded
            edgemeredimldmldo <-- datarequestneeded
        
hexagon "datarequest.selected" as datarequestselected
            edgemeredimldmldo <-- datarequestselected
        































        rectangle "Manage Data Instances" as ManageDataInstances #ffffaa {
            ("Create Data Instance")/ as ApplicationDeveloperManageDataInstancesCreateDataInstance
        }
    
    edgemeredimldmldodatainstancecreate <-- ApplicationDeveloperManageDataInstancesCreateDataInstance

        rectangle "Manage Data Instances" as ManageDataInstances #ffffaa {
            ("Find Data Instance")/ as DataEngineerManageDataInstancesFindDataInstance
        }
    
    edgemeredimldmldodatainstancefind <-- DataEngineerManageDataInstancesFindDataInstance

        rectangle "Manage Data Instances" as ManageDataInstances #ffffaa {
            ("Remove Data Instance")/ as DataEngineerManageDataInstancesRemoveDataInstance
        }
    
    edgemeredimldmldodatainstancedestroy <-- DataEngineerManageDataInstancesRemoveDataInstance

























@enduml
