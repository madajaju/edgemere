@startuml

left to right direction




node "diml_dml" as diml_dmlStack #ffcc88 {
    portin "parent" as diml_dmlStackPortIn #blue
}



node "diml" #ffcc88 {


    hexagon parentnet #black [
            <b><color:white>parent</color></b>
    ]
    
    portin " " as parentnetPortIn #black
    parentnetPortIn -[#black]- parentnet
    
    hexagon childrennet #blue [
            <b><color:white>children</color></b>
    ]
    
    portout " " as childrennetPortOut #blue
    childrennet -[#blue]- childrennetPortOut
    
    hexagon siblingsnet #red [
            <b><color:white>siblings</color></b>
    ]
    

node "web" as webService #white {
    portOut " " as webServicechildrennet #blue
   webServicechildrennet -[#blue]- childrennet
       portOut " " as webServicesiblingsnet #red
   webServicesiblingsnet -[#red]- siblingsnet
   

    artifact "diml_web" as diml_webimage
    
}
node "diml_cds" as diml_cdsService #white {
    portOut " " as diml_cdsServicechildrennet #blue
   diml_cdsServicechildrennet -[#blue]- childrennet
   

    artifact "diml_cds" as diml_cdsimage
    
}
node "diml_ddf" as diml_ddfService #white {
    portOut " " as diml_ddfServicechildrennet #blue
   diml_ddfServicechildrennet -[#blue]- childrennet
   

    artifact "diml_ddf" as diml_ddfimage
    
}
node "diml_dml" as diml_dmlService #white {
    portOut " " as diml_dmlServicechildrennet #blue
   diml_dmlServicechildrennet -[#blue]- childrennet
   
    collections "diml_dml" as diml_dmlimage
    
}

}

diml_dmlimage --> diml_dmlStack
    
    childrennetPortOut -[#blue]- diml_dmlStackPortIn
    

@enduml
