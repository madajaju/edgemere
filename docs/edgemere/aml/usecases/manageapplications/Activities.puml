@startuml


left to right direction

usecase "Manage Applications" as ManageApplications #yellow

Actor "DevOps Engineer" as DevOpsEngineer

DevOpsEngineer --> ManageApplications

Actor "Application Developer" as ApplicationDeveloper

ApplicationDeveloper --> ManageApplications



json BuildApplication #lightyellow {
    "Given": "DevOps Engineer has access to the application source code",
    "When": "DevOps Engineer initiates the build process using the method &#39;data/create&#39;",
    "Then": "The application is built successfully"
}

ManageApplications <|-- BuildApplication

json CreateApplication #lightyellow {
    "Given": "Application Developer wants to create a new application",
    "When": "Application Developer uses &#39;application/create&#39; method",
    "Then": "New application is created and managed under &#39;ManageApplications.CreateApplication&#39;"
}

ManageApplications <|-- CreateApplication

json DeployApplication #lightyellow {
    "Given": "DevOps Engineer has access to deploy application",
    "When": "DevOps Engineer uses the application/deploy method",
    "Then": "Application should be successfully deployed"
}

ManageApplications <|-- DeployApplication

json DestroyApplication #lightyellow {
    "Given": "A DevOps Engineer has access to the application/destroy method",
    "When": "The DevOps Engineer uses the application/destroy method",
    "Then": "The specified application is destroyed"
}

ManageApplications <|-- DestroyApplication

json MonitorApplication #lightyellow {
    "Given": "DevOps Engineer and Application Developer have access to the Monitor Application",
    "When": "They use the Monitor Application",
    "Then": "They should be able to manage and monitor applications"
}

ManageApplications <|-- MonitorApplication

json UpdateApplication #lightyellow {
    "Given": "an Application Developer or DevOps Engineer uses the application/update method",
    "When": "they want to update the application",
    "Then": "the application should be updated properly"
}

ManageApplications <|-- UpdateApplication



usecase "OrganizeSolutions" as OrganizeSolutions #lightyellow

ManageApplications <-- OrganizeSolutions : extends







@enduml
