@startuml
left to right direction


    package "edgemere" as edgemere {
package "aml" as edgemereaml {
package "ds" as edgemereamlds {
package "em" as edgemereamldsem #88cc88 {
 component "environment" as edgemereamldsemenvironment
 interface "addpolicies" as edgemereamldsemenvironmentaddpolicies
edgemereamldsemenvironment -- edgemereamldsemenvironmentaddpolicies
}
}
}
}

    
    package "edgemere" as edgemere {
package "aml" as edgemereaml {
package "ds" as edgemereamlds {
package "em" as edgemereamldsem #88cc88 {
 component "environment" as edgemereamldsemenvironment
 interface "create" as edgemereamldsemenvironmentcreate
edgemereamldsemenvironment -- edgemereamldsemenvironmentcreate
}
}
}
}

    
    package "edgemere" as edgemere {
package "aml" as edgemereaml {
package "ds" as edgemereamlds {
package "em" as edgemereamldsem #88cc88 {
 component "environment" as edgemereamldsemenvironment
 interface "destroy" as edgemereamldsemenvironmentdestroy
edgemereamldsemenvironment -- edgemereamldsemenvironmentdestroy
}
}
}
}

    
    package "edgemere" as edgemere {
package "aml" as edgemereaml {
package "ds" as edgemereamlds {
package "em" as edgemereamldsem #88cc88 {
 component "environment" as edgemereamldsemenvironment
 interface "disable" as edgemereamldsemenvironmentdisable
edgemereamldsemenvironment -- edgemereamldsemenvironmentdisable
}
}
}
}

    
    package "edgemere" as edgemere {
package "aml" as edgemereaml {
package "ds" as edgemereamlds {
package "em" as edgemereamldsem #88cc88 {
 component "environment" as edgemereamldsemenvironment
 interface "enable" as edgemereamldsemenvironmentenable
edgemereamldsemenvironment -- edgemereamldsemenvironmentenable
}
}
}
}

    
    package "edgemere" as edgemere {
package "aml" as edgemereaml {
package "ds" as edgemereamlds {
package "em" as edgemereamldsem #88cc88 {
 component "environment" as edgemereamldsemenvironment
 interface "list" as edgemereamldsemenvironmentlist
edgemereamldsemenvironment -- edgemereamldsemenvironmentlist
}
}
}
}

    
    package "edgemere" as edgemere {
package "aml" as edgemereaml {
package "ds" as edgemereamlds {
package "em" as edgemereamldsem #88cc88 {
 component "environment" as edgemereamldsemenvironment
 interface "update" as edgemereamldsemenvironmentupdate
edgemereamldsemenvironment -- edgemereamldsemenvironmentupdate
}
}
}
}

    

        rectangle "Manage Environment" as ManageEnvironment #ffffaa {
            ("Create Environment")/ as ITOperationsManageEnvironmentCreateEnvironment
        }
    
    edgemereamldsemenvironmentcreate <-- ITOperationsManageEnvironmentCreateEnvironment
    
        rectangle "Manage Environment" as ManageEnvironment #ffffaa {
            ("Delete Environment")/ as ITOperationsManageEnvironmentDeleteEnvironment
        }
    
    edgemereamldsemenvironmentdestroy <-- ITOperationsManageEnvironmentDeleteEnvironment
    
        rectangle "Manage Environment" as ManageEnvironment #ffffaa {
            ("Disable Environment")/ as ITOperationsManageEnvironmentDisableEnvironment
        }
    
    edgemereamldsemenvironmentdisable <-- ITOperationsManageEnvironmentDisableEnvironment
    
        rectangle "Manage Environment" as ManageEnvironment #ffffaa {
            ("Enable Environment")/ as ITOperationsManageEnvironmentEnableEnvironment
        }
    
    edgemereamldsemenvironmentenable <-- ITOperationsManageEnvironmentEnableEnvironment
    
        rectangle "Manage Environment" as ManageEnvironment #ffffaa {
            ("Manage Policies in Environment")/ as ITOperationsManageEnvironmentManagePoliciesinEnvironment
        }
    
    edgemereamldsemenvironmentaddpolicies <-- ITOperationsManageEnvironmentManagePoliciesinEnvironment
    
        rectangle "Manage Environment" as ManageEnvironment #ffffaa {
            ("Update Environment")/ as ITOperationsManageEnvironmentUpdateEnvironment
        }
    
    edgemereamldsemenvironmentupdate <-- ITOperationsManageEnvironmentUpdateEnvironment
    




































@enduml
