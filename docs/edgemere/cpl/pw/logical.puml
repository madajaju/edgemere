@startuml


package "PhysicalWorld" #aaffff {
    
        class PhysicalAsset {
        }
    
        class Location {
        }
    
        class Sensor {
        }
    
        class CommunicationPathway {
        }
    }

package "Common Physical Layer" #cccccc {
    
        class Device {
        }
    }


package "PhysicalWorld" #aaffff {

    interface "PhysicalWorld" as i {
            /edgemere/cpl/pw/asset/control()
            /edgemere/cpl/pw/asset/startmonitoring()
            /edgemere/cpl/pw/asset/stopmonitoring()
            /edgemere/cpl/pw/communicationpathway/transmitdata()
            /edgemere/cpl/pw/data/create()
            /edgemere/cpl/pw/location/getlocationdetails()
            /edgemere/cpl/pw/location/setcoordinates()
            /edgemere/cpl/pw/physicalasset/manage()
            /edgemere/cpl/pw/plc/communicatewithasset()
            /edgemere/cpl/pw/sensor/getreading()
    
    }
}

CLI ()-- i
REST ()-- i
Web ()-- i

package "PhysicalWorld" #aaffff {
        class "CommunicationPathway" {
                 string kind
                 string protocol
                             transmitData()
            }
                CommunicationPathway o--> "1" PhysicalAsset : asset
                        CommunicationPathway o--> "1" Device : device
            
    
    class "Location" {
                 string name
                 number lat
                 number long
                 number alt
                 string address
                 string notes
                             addAsset()
                     getCoordinates()
                     getLocationDetails()
                     removeAsset()
                     setCoordinates()
            }
                Location *--> "n" Asset : assets
            
    
    class "PhysicalAsset" {
                 string name
                 string assetType
                             activate()
                     attachPathway()
                     attachSensor()
                     control()
                     deactivate()
                     detachPathway()
                     detachSensor()
                     monitorCondition()
                     startMonitoring()
                     stopMonitoring()
            }
                PhysicalAsset o--> "1" Location : location
                        PhysicalAsset *--> "n" Sensor : sensor
                        PhysicalAsset o--> "n" CommunicationPathway : pathway
            
    
    class "PLC" {
                 string name
                 string kind
                 string protocol
                             communicateWithAsset()
                     transmitData()
            }
                PLC o--> "1" PhysicalAsset : asset
                        PLC o--> "1" Device : device
            
    
        CommunicationPathway <|-- PLC
    
    class "Sensor" {
                 string name
                 string reading
                             getReading()
            }
                Sensor o--> "1" Asset : asset
            
    

}



@enduml
