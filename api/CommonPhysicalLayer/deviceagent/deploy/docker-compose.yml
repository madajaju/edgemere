version: "3.7"
services:
  datacontroller:
    image: diml_dml_dc_controller:latest
    stop_grace_period: 1m
    stop_signal: SIGINT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      labels:
        - traefik.tags=${AILTIRE_APPNAME}_cpl_da_family
        - traefik.enable=true
        - traefik.docker.network=${AILTIRE_APPNAME}_cpl_da_family
        - traefik.http.services.datacontroller.loadbalancer.server.port=3000
        - traefik.http.routers.datacontroller_http.rule=PathPrefix(`/data`)
        - traefik.http.routers.datacontroller_http.service=datacontroller
        - traefik.http.routers.datacontroller_http.entrypoints=http
    environment:
      - AILTIRE_STACKNAME={{.Service.Name}}-{{.Task.Slot}}
      - AILTIRE_PARENT=${AILTIRE_STACKNAME}
      - AILTIRE_PARENTHOST=${AILTIRE_PARENTHOST}
      - AILTIRE_APPNAME=${AILTIRE_APPNAME}
      - AILTIRE_PARENT_NETWORK=${AILTIRE_APPNAME}_cpl_da
      - EDGEMERE_ADMIN_URL=portal:3000
    networks:
      - children
  policyengine:
    image: sa_pe_engine:latest
    stop_grace_period: 1m
    stop_signal: SIGINT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      labels:
        - traefik.tags=${AILTIRE_APPNAME}_cpl_da_family
        - traefik.enable=true
        - traefik.docker.network=${AILTIRE_APPNAME}_cpl_da_family
        - traefik.http.services.policyengine.loadbalancer.server.port=3000
        - traefik.http.routers.policyengine_http.rule=PathPrefix(`/policy`)
        - traefik.http.routers.policyengine_http.service=policyengine
        - traefik.http.routers.policyengine_http.entrypoints=http
    environment:
      - AILTIRE_STACKNAME={{.Service.Name}}-{{.Task.Slot}}
      - AILTIRE_PARENT=${AILTIRE_STACKNAME}
      - AILTIRE_PARENTHOST=${AILTIRE_PARENTHOST}
      - AILTIRE_APPNAME=${AILTIRE_APPNAME}
      - AILTIRE_PARENT_NETWORK=${AILTIRE_APPNAME}_cpl_da
      - EDGEMERE_ADMIN_URL=portal:3000
    networks:
      - children
  servicecontroller:
    image: sml_sc:latest
    stop_grace_period: 1m
    stop_signal: SIGINT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      labels:
        - traefik.tags=${AILTIRE_APPNAME}_cpl_da_family
        - traefik.enable=true
        - traefik.docker.network=${AILTIRE_APPNAME}_cpl_da_family
        - traefik.http.services.servicecontroller.loadbalancer.server.port=3000
        - traefik.http.routers.servicecontroller_http.rule=PathPrefix(`/service`)
        - traefik.http.routers.servicecontroller_http.service=servicecontroller
        - traefik.http.routers.servicecontroller_http.entrypoints=http
    environment:
      - AILTIRE_STACKNAME={{.Service.Name}}-{{.Task.Slot}}
      - AILTIRE_PARENT=${AILTIRE_STACKNAME}
      - AILTIRE_PARENTHOST=${AILTIRE_PARENTHOST}
      - AILTIRE_APPNAME=${AILTIRE_APPNAME}
      - AILTIRE_PARENT_NETWORK=${AILTIRE_APPNAME}_cpl_da
      - EDGEMERE_ADMIN_URL=portal:3000
    networks:
      - children
  telemetry_producer:
    image: cpl_tp_producer:latest
    stop_grace_period: 1m
    stop_signal: SIGINT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      labels:
        - traefik.tags=${AILTIRE_APPNAME}_cpl_da_family
        - traefik.enable=true
        - traefik.docker.network=${AILTIRE_APPNAME}_cpl_da_family
        - traefik.http.services.telemetry_producer.loadbalancer.server.port=3000
        - traefik.http.routers.telemetry_producer_http.rule=PathPrefix(`/telemetry`)
        - traefik.http.routers.telemetry_producer_http.service=telemetry_producer
        - traefik.http.routers.telemetry_producer_http.entrypoints=http
    environment:
      - AILTIRE_STACKNAME={{.Service.Name}}-{{.Task.Slot}}
      - AILTIRE_PARENT=${AILTIRE_STACKNAME}
      - AILTIRE_PARENTHOST=${AILTIRE_PARENTHOST}
      - AILTIRE_APPNAME=${AILTIRE_APPNAME}
      - AILTIRE_PARENT_NETWORK=${AILTIRE_APPNAME}_cpl_da
      - EDGEMERE_ADMIN_URL=portal:3000
    networks:
      - sibling
  portal:
    image: cpl_da_web
    networks:
      - sibling
    deploy:
        replicas: 1
        labels:
          - traefik.tags=${AILTIRE_APPNAME}_cpl_da_family
          - traefik.enable=true
          - traefik.docker.network=${AILTIRE_APPNAME}_cpl_da_family
          - traefik.http.services.portal.loadbalancer.server.port=3000
          - traefik.http.routers.portal_http.rule=PathPrefix(`/admin`)
          - traefik.http.routers.portal_http.service=portal
          - traefik.http.routers.portal_http.entrypoints=http
    environment:
      - AILTIRE_STACKNAME={{.Service.Name}}-{{.Task.Slot}}
      - AILTIRE_PARENT=${AILTIRE_STACKNAME}
      - AILTIRE_PARENTHOST=${AILTIRE_PARENTHOST}
      - AILTIRE_APPNAME=${AILTIRE_APPNAME}
      - AILTIRE_PARENT_NETWORK=${AILTIRE_APPNAME}_cpl_da
      - EDGEMERE_DEVICE_MANAGER=${EDGEMERE_DEVICE_MANAGER}
  frontend:
    image: traefik:latest
    command:
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true
      - --api.debug=true
      - --accesslog=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.network=children
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.docker.constraints=Label(`traefik.tags`,`${AILTIRE_APPNAME}_cpl_da_family`)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - children
networks:
  children:
    driver: overlay
    attachable: true
    name: ${AILTIRE_APPNAME}_cpl_da_family
  sibling:
    driver: overlay
