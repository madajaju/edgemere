#!/usr/bin/env node

const program = require('commander');

const YAML = require('yamljs');
const Client = require('node-rest-client').Client;
const client = new Client();
global.ailtire = { config: require('C:\\Users\\dwpulsip\\work\\edgemere\\bin\\lib/../../.ailtire.js') };
program.command('deploy [options]', 'Description of the action')
	.option('--name <string>', 'Name instance of the blueprint')
	.option('--blueprint <string>', 'Name of the blueprint')
	.option('--file <YAML>', 'File of with the parameters for the deployment')
	.option('--sources <string>', 'Names and values of the sources for the blueprint');
program.parse(process.argv);
let url = global.ailtire.config.host + '/diml/ddf/datablueprint/deploy?';
url += 'mode=json';
let args = {headers: {'Content-Type': 'application/json'}, data: {}};
if(program['name']) { args.data['name'] = program['name']; }
if(program['blueprint']) { args.data['blueprint'] = program['blueprint']; }
if(program['file']) { args.data['file'] = YAML.load(program['file']); }
if(program['sources']) { args.data['sources'] = program['sources']; }
client.post(url, args, (data, response) => {
console.log('URL:' + url);
console.log('ARGS:' + args);
console.log('DATA:' + data.toString());
console.log('RESPONSE:' + response.toString());
if (data.error) { console.error('Error:' + data.error); } else { 
for(let item in data) { console.log(data[item].toString()); } }
});