<!DOCTYPE html>
<html>

<%
let hostURL = global.ailtire.config.host;
if(global.ailtire.config.listenPort) {
    hostURL += ':' + global.ailtire.config.listenPort;
}
%>
<head>
    <title>Edgemere</title>
    <script src="js/jquery.js"></script>
    <script src="js/w2ui.js"></script>
    <link rel="stylesheet" href="styles/w2ui.css" />
    <base href="http://<%= hostURL %><%= global.ailtire.config.urlPrefix %>/" >
    <script src="js/aframe.js"></script>
    <script src="js/three.js"></script>
    <script src="js/3d-force-graph.js"></script>
    <script src="js/d3-force-3d.js"></script>
    <script src="js/d3-octree.js"></script>
    <script src="js/Graph3D.js"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>

<div id="main" style="width: 100%; height: 800px;"></div>
<!--This is a garden of 3DObjects for the graphing-->
<div style="display:none;">
    <div id="scratchspace" style="display:none;">
        <a-scene embedded height="0px" width="0px">
            <a-entity id="ObjectGarden" position="-10 20 -100">
                <a-sphere id="default3D" position="0 0 0" radius="10" color="#cccccc"></a-sphere>
                <a-sphere id="default3DSelected" position="0 0 0" radius="10" color="#ffff00"></a-sphere>
                <a-sphere id="default3DTargeted" position="0 0 0" radius="10" color="#ff0000"></a-sphere>
                <a-sphere id="default3DSourced" position="0 0 0" radius="10" color="#00ff00"></a-sphere>
                <% for(let cname in global.classes) {
                let cls = global.classes[cname];
                if(cls.definition.view) {
                %>
                <%- cls.definition.view.object3d() %>
                <% } } %>
            </a-entity>
        </a-scene>
    </div>
</div>

<script type="text/javascript">
    // widget configuration
    var config = {
        layout: {
            name: 'layout',
            padding: 0,
            panels: [
                { type: 'top', size: 50, resizable: true, content: '<h2><%= app.name %></h2>' },
                { type: 'left', size: 200, resizable: true, content: 'left' },
                { type: 'main', content: 'Details', resizable: true },
                { type: 'preview', size: '70%', content: 'Graph', resizable: true },
                { type: 'right', size: 200, resizable: true, content: 'right' }
            ]
        },
        rightbar: {
            name: 'rightbar',
            nodes: [
                { id: 'classes', text: 'Classes', group: true, expanded: true, nodes: [
                    <%
                        let classList = [];
                        let classes = Object.keys(global.classes).sort();
                        for(let i in classes) {
                            let cname = classes[i];
                            let cls = global.classes[cname];
                            let noi = 0;
                            if(global._instances && global._instances.hasOwnProperty(cname)) {
                                noi = Object.keys(global._instances[cname]).length;
                            }
                            classList.push(`{ id: '${cname}', text: '${cname}', img: 'icon-page', link: '${cname}/list', count: ${noi} }`);
                        }
                    -%>
                    <%- classList.join(',\n\t') %>
                    ]
                }
            ],
            onClick: function (event) {
                if(event.object.link) {
                    // w2ui['layout'].content('main', `<iframe name="mainframe" style="width: 100%; height: 100%;" src="${event.object.link}"></iframe>`, 'slide-bottom');
                    // Get the information from the link and load it in the mainpage and the preview
                    $.ajax({
                        url: event.object.link,
                        success: function (result) {
                            if(!w2ui['objlist']) {
                                $('#objlist').w2grid({ name: 'objlist',
                                    onClick: function (event) {
                                        // window.graph.selectNodeByID(event.recid);
                                        w2ui['objdetail'].clear();
                                        let record = this.get(event.recid);
                                        let drecords = [];
                                        let k=0;
                                        for(let name in record) {
                                            if(name.includes('detail')) {
                                                k++;
                                                let aname = name.replace('detail','');
                                                drecords.push({recid: k, name: aname, value: record[name]});
                                            }
                                        }
                                        w2ui['objdetail'].add(drecords);
                                    }
                                });
                            }
                            if(!w2ui['objdetail']) {
                                $('#objdetail').w2grid({
                                    name: 'objdetail',
                                    header: 'Details',
                                    show: { header: true, columnHeaders: false},
                                    columns: [
                                        { field: 'name', caption: 'Name', size: '100px', style: 'background-color: #efefef; border-bottom: 1px solid white; padding-right: 5px;', attr: "align=right" },
                                        { field: 'value', caption: 'Value', size: '100%', render: function(record) {
                                                return '<div>' + record.value + '</div>';
                                            }
                                        }
                                    ]
                                });
                            }

                            let records = [];
                            let cols = [];
                            let size = `${100 / Object.keys(result.columns).length}%`;
                            for (let i in result.columns) {
                                cols.push({field: result.columns[i].name, size: size, resizeable:true, caption: result.columns[i].name, sortable: true});
                            }
                            for (let i in result.records) {
                                let rec = result.records[i];
                                let ritem = {recid: i};
                                for(let j in result.columns) {
                                    let attr = rec[j];
                                    if(attr) {
                                        if (attr.count) {
                                            // set the non-detaul value to the count
                                            ritem[j] = attr.count;

                                            // Now set the detail value
                                            let values = [];
                                            for (let k in attr.values) {
                                                let mvalue = attr.values[k];
                                                if (mvalue.link) {
                                                    values.push(`<a href="${mvalue.link}" target="_self">${mvalue.name}</a>`);
                                                } else {
                                                    values.push(mvalue.name);
                                                }
                                            }
                                            ritem[j + 'detail'] = values.join(', ');
                                        } else {
                                            ritem[j] = rec[j].name;
                                            ritem[j + 'detail'] = rec[j].name;
                                        }
                                    }
                                }
                                records.push(ritem);
                            }
                            w2ui['objlist'].columns = cols;
                            w2ui['objlist'].records = records;
                            w2ui['objlist'].refresh();
                            /* '$('#objlist').w2grid({
                                name: 'objlist',
                                columns: cols,
                                records: records
                            });
                             */
                        }
                    });
                }
            }
        },
        sidebar: {
            name: 'sidebar',
            img: null,
            nodes: [
                { id: 'actors', text: 'Actors', group: true, expanded: true, nodes: [
                    <%
                        let actorList = [];
                        for(let name in global.actors) {
                            let actor = global.actors[name];
                            let ucItems = [];
                            let actorItem = `{ id: '${actor.shortname}', text: '${name}', img: 'icon-folder', link: 'layout/sidebar', \n\tnodes: [`;
                            let i = 0;
                            for(let uname in actor.usecases) {
                                i++;
                                let uc = actor.usecases[uname];
                                ucItems.push(`{ id: '${name}${i}', text: '${uname}', img: 'icon-page', link: '${uc.method}' }`);
                            }
                            actorItem += ucItems.join(',\n\t');
                            actorItem += `], count: ${i} }\n`;
                            actorList.push(actorItem);
                        }
                    -%>
                    <%- actorList.join(',\n\t'); %>
                ]},
                { id: 'packages', text: 'Packages', group: true, expanded: true, nodes: [
                    <%
                    function getNodes(pkg) {
                        let sitems = [];
                        for(let pname in pkg.subpackages) {
                            let spkg = pkg.subpackages[pname];
                            let spkgi = `{ id: '${spkg.shortname}', text: '${spkg.name}', img: 'icon-page' `;
                             if(spkg.subpackages) {
                                spkgi += `, nodes: [`;
                                let spkgs = getNodes(spkg);
                                let num = spkgs.length;
                                spkgi += spkgs.join(',\n\t');
                                spkgi += `], count: ${num}`;
                             }
                             spkgi += '}';
                             sitems.push(spkgi);
                        }
                        return sitems;
                    }
                    let topPackage = global.topPackage;
                    let packageList = getNodes(topPackage);
                    -%>
                    <%- packageList.join(','); %>
                ]},
                { id: 'usecases', text: 'Use Cases', group: true, expanded: true, nodes: [
                    <%
                        let ucList = [];
                        for(let name in global.usecases) {
                            let uc = global.usecases[name];
                            let ucItem = `{ id: '${name.replace(/\s/g, '')}', text: '${name}', img: 'icon-folder', link: '${uc.method}', nodes: [ `;
                            let scitems = [];
                            let i = 0;
                            for(let sname in uc.scenarios) {
                                let scenario = uc.scenarios[sname];
                                i++;
                                scitems.push(`{ id: '${sname}', text:'${sname}', img: 'icon-page', link: 'scenario/execute?id=${name}.${sname}' }`);
                            }
                            ucItem += scitems.join(',\n\t');
                            ucItem += `], count: ${i} }`;
                            ucList.push(ucItem);
                        }
                    -%>
                    <%- ucList.join(',\n'); %>
                ]},
            ],
            onClick: function (event) {
                if(event.object.link) {
                // Get the information from the link and load it in the mainpage and the preview


                }
            }
        },
    };

    $(function () {
        // initialization
        $('#main').w2layout(config.layout);
        w2ui.layout.content('left', $().w2sidebar(config.sidebar));
        w2ui.layout.content('right', $().w2sidebar(config.rightbar));
        w2ui.layout.content('main', `<div style="position: relative; height: 200px;"> <div id="objlist" style="position: absolute; left: 0px; width: 49.9%; height: 200px;"></div> <div id="objdetail" style="position: absolute; right: 0px; width: 49.9%; height: 200px;"></div> </div>`);
        w2ui.layout.content('preview', `<div className="modelGraph" id="DrawingArea" style="position: absolute; left: 0px; width: 100%; height 700px;"></div>`);

        let socket = io("http://<%= hostURL %>");
        // let socket = io();
        socket.on('device.create', (msg) => {
            console.log("UPDATE:" + msg);
        });
        socket.on('ConnectedEdge', (msg) => {
            console.log("Connected :" + msg);
        });
    });
</script>

</body>
</html>
